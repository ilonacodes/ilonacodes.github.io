<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on Ilona Who Codes</title>
    <link>//www.ilonacodes.com/tags/web/</link>
    <description>Recent content in Web on Ilona Who Codes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Jan 2019 10:40:05 +0100</lastBuildDate>
    
	<atom:link href="//www.ilonacodes.com/tags/web/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Harnessing the power of Bootstrap in React with Reactstrap</title>
      <link>//www.ilonacodes.com/blog/harnessing-the-power-of-bootstrap-in-react-with-reactstrap/</link>
      <pubDate>Fri, 11 Jan 2019 10:40:05 +0100</pubDate>
      
      <guid>//www.ilonacodes.com/blog/harnessing-the-power-of-bootstrap-in-react-with-reactstrap/</guid>
      <description>&lt;p&gt;
&lt;figure&gt;
    
        &lt;img src=&#34;//www.ilonacodes.com/blog/images/reactstrap.jpg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;source: bit.ly/2TJDcVt&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;

Nowadays there are a lot of UI frameworks for React like Bootstrap, UIKit, Semantic UI and so on. Depending on the project complexity and requirements, you decide which front-end framework would be used because the main reason is to ease your development process.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What are GraphQL and its schemas</title>
      <link>//www.ilonacodes.com/blog/what-are-graphql-and-its-schemas/</link>
      <pubDate>Fri, 04 Jan 2019 10:40:05 +0100</pubDate>
      
      <guid>//www.ilonacodes.com/blog/what-are-graphql-and-its-schemas/</guid>
      <description>&lt;p&gt;
&lt;figure&gt;
    
        &lt;img src=&#34;//www.ilonacodes.com/blog/images/what-are-graphql-and-its-schemas.jpg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;source: Photo by Daniel Cheung on Unsplash&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;

The last days I am spending time on learning &lt;a href=&#34;https://graphql.org/&#34;&gt;GraphQL&lt;/a&gt; and how its clients communicate between frontend and backend application parts.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Let’s implement: Progress Bar With React Hooks</title>
      <link>//www.ilonacodes.com/blog/progress-bar-with-react-hooks/</link>
      <pubDate>Fri, 28 Dec 2018 10:40:05 +0100</pubDate>
      
      <guid>//www.ilonacodes.com/blog/progress-bar-with-react-hooks/</guid>
      <description>&lt;p&gt;
&lt;figure&gt;
    
        &lt;img src=&#34;//www.ilonacodes.com/blog/images/progress-bar-with-react-hooks.jpg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;source: Photo by Roman Kraft on Unsplash&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;

After &lt;strong&gt;React Hooks&lt;/strong&gt; introduction at &lt;a href=&#34;https://www.youtube.com/watch?v=dpw9EHDh2bM&#34;&gt;React Conf October 2018&lt;/a&gt; I decided to learn this approach how to use state and side-effects in React functional components.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hacking User Testing With ReactJS</title>
      <link>//www.ilonacodes.com/blog/hacking-user-testing-with-reactjs/</link>
      <pubDate>Mon, 24 Dec 2018 10:40:05 +0100</pubDate>
      
      <guid>//www.ilonacodes.com/blog/hacking-user-testing-with-reactjs/</guid>
      <description>&lt;p&gt;
&lt;figure&gt;
    
        &lt;img src=&#34;//www.ilonacodes.com/blog/images/hacking-user-testing.jpeg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;source: https://bit.ly/2T8OJxc&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;

There are many tools available for designers to create beautiful user interfaces and user experiences. And today I want to share another approach on how to build interactive design prototypes with ReactJS and why.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Avoid Duplication of Common Wrapper Behavior in React Using Children Prop</title>
      <link>//www.ilonacodes.com/blog/how-to-avoid-duplication-of-common-wrapper-behavior-in-react-using-children-prop/</link>
      <pubDate>Thu, 11 Oct 2018 10:40:05 +0100</pubDate>
      
      <guid>//www.ilonacodes.com/blog/how-to-avoid-duplication-of-common-wrapper-behavior-in-react-using-children-prop/</guid>
      <description>&lt;figure&gt;
    
        &lt;img src=&#34;//www.ilonacodes.com/blog/images/react-children-prop.jpeg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;source: bit.ly/2xzBpaF&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;When I was learning React there were a couple things that I couldn&amp;rsquo;t clearly understand and one of them was &lt;strong&gt;children prop&lt;/strong&gt;. That is until I faced the problem similar to the following one.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Simple Image Carousel with React</title>
      <link>//www.ilonacodes.com/blog/simple-image-carousel-with-react/</link>
      <pubDate>Sat, 06 Oct 2018 10:40:05 +0100</pubDate>
      
      <guid>//www.ilonacodes.com/blog/simple-image-carousel-with-react/</guid>
      <description>&lt;figure&gt;
    
        &lt;img src=&#34;//www.ilonacodes.com/blog/images/simple-image-carousel-with-react.jpeg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;source: bit.ly/2CtMqAO&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;Here we are! Due to my master thesis at the university, one of the requirements is the implementation of an interactive mockup for the university WebTV platform. So, I decided to make it with React.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Why Formik With React</title>
      <link>//www.ilonacodes.com/blog/why-formik-with-react/</link>
      <pubDate>Sat, 15 Sep 2018 18:40:05 +0100</pubDate>
      
      <guid>//www.ilonacodes.com/blog/why-formik-with-react/</guid>
      <description>&lt;p&gt;
&lt;figure&gt;
    
        &lt;img src=&#34;//www.ilonacodes.com/blog/images/why-formik-with-react-cover.jpeg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;source: https://bit.ly/2paojyl&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;

The way, how I try to understand the purpose of any framework is to use it and compare with the already implemented no-framework solution.&lt;/p&gt;

&lt;p&gt;Sure, most of us, at first hear about a new library from tech media portals or from tech-dev influencers or from conferences/meetups or from coworkers, etc. then we are going to check out the source of it whether it is a software or open-source product. In the end, we are playing with it and trying to apply it to the existing product.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emotional Todo List with React</title>
      <link>//www.ilonacodes.com/blog/emotional-todo-list-with-react/</link>
      <pubDate>Fri, 07 Sep 2018 18:40:05 +0100</pubDate>
      
      <guid>//www.ilonacodes.com/blog/emotional-todo-list-with-react/</guid>
      <description>&lt;p&gt;
&lt;figure&gt;
    
        &lt;img src=&#34;//www.ilonacodes.com/blog/images/emotional-todo-list-cover.jpeg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;source: https://bit.ly/2NXyGjE&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;

From the title of the post, you understand that I am not only going to explain how to implement a traditional TODO-List with React, but also show you how I am applying &lt;a href=&#34;https://emotion.sh/&#34;&gt;emotion-js&lt;/a&gt; for this mini-project.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>